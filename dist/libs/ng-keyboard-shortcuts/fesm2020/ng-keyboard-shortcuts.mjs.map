{"version":3,"file":"ng-keyboard-shortcuts.mjs","sources":["../../../../libs/ng-keyboard-shortcuts/src/lib/utils.ts","../../../../libs/ng-keyboard-shortcuts/src/lib/keys.ts","../../../../libs/ng-keyboard-shortcuts/src/lib/ng-keyboard-shortcuts.interfaces.ts","../../../../libs/ng-keyboard-shortcuts/src/lib/ng-keyboard-shortcuts.service.ts","../../../../libs/ng-keyboard-shortcuts/src/lib/ng-keyboard-shortcuts.component.ts","../../../../libs/ng-keyboard-shortcuts/src/lib/ng-keyboard-shortcuts-help.service.ts","../../../../libs/ng-keyboard-shortcuts/src/lib/ng-keyboard-shortcuts-select.service.ts","../../../../libs/ng-keyboard-shortcuts/src/lib/ng-keyboard-shortcuts.directive.ts","../../../../libs/ng-keyboard-shortcuts/src/lib/portal.ts","../../../../libs/ng-keyboard-shortcuts/src/lib/dom-portal-outlet.ts","../../../../libs/ng-keyboard-shortcuts/src/lib/ng-keyboard-shortcuts-help-item.component.ts","../../../../libs/ng-keyboard-shortcuts/src/lib/ng-keyboard-shortcuts-help-item.component.html","../../../../libs/ng-keyboard-shortcuts/src/lib/ng-keyboard-shortcuts-help.component.ts","../../../../libs/ng-keyboard-shortcuts/src/lib/ng-keyboard-shortcuts-help.component.html","../../../../libs/ng-keyboard-shortcuts/src/lib/ng-keyboard-shortcuts.plugin.ts","../../../../libs/ng-keyboard-shortcuts/src/lib/keyboard-shortcut.component.ts","../../../../libs/ng-keyboard-shortcuts/src/lib/ng-keyboard-shortcuts.module.ts","../../../../libs/ng-keyboard-shortcuts/src/lib/polyfills.ts","../../../../libs/ng-keyboard-shortcuts/src/index.ts","../../../../libs/ng-keyboard-shortcuts/src/ng-keyboard-shortcuts.ts"],"sourcesContent":["export function isFunction(x: any): x is () => void {\r\n    return typeof x === 'function';\r\n}\r\n\r\nexport function invert<T extends string, U extends string>(obj: Record<T, U>) {\r\n    const new_obj: Record<Extract<string, string>, string> = {};\r\n\r\n    for (const prop in obj) {\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (obj.hasOwnProperty(prop)) {\r\n            new_obj[obj[prop]] = prop;\r\n        }\r\n    }\r\n    return new_obj;\r\n}\r\n\r\nexport const any = (fn: (params: unknown) => boolean, list: unknown[]) => {\r\n    let idx = 0;\r\n    while (idx < list.length) {\r\n        if (fn(list[idx])) {\r\n            return true;\r\n        }\r\n        idx += 1;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const identity = (x: any) => x;\r\n\r\n/**\r\n * @ignore\r\n * @param x\r\n * @returns boolean\r\n */\r\nexport const isNill = (x: unknown) => x == null;\r\n\r\n/**\r\n * @ignore\r\n * @param xs\r\n * @param key\r\n * @returns any\r\n */\r\nexport function groupBy<T, K extends string = string>(xs: readonly T[], key: K): Record<K, T[]> {\r\n    return xs.reduce(\r\n        (result, x) => ({\r\n            ...result,\r\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n            // @ts-ignore\r\n            [x[key]]: [...(result[x[key]] || []), x]\r\n        }),\r\n        {} as Record<K, T[]>\r\n    );\r\n}\r\n\r\n\r\n/**\r\n * @ignore\r\n * @param first\r\n * @param second\r\n * @returns any[]\r\n */\r\nexport const difference = (first: any[], second: any[]) =>\r\n    first.filter(item => !second.includes(item));\r\n\r\n/**\r\n * @ignore\r\n * @param preds\r\n * @returns (...args) => boolean;\r\n */\r\nexport const allPass = preds => (...args) => {\r\n    let idx = 0;\r\n    const len = preds.length;\r\n    while (idx < len) {\r\n        if (!preds[idx].apply(this, args)) {\r\n            return false;\r\n        }\r\n        idx += 1;\r\n    }\r\n    return true;\r\n};\r\nexport const prop = prop => object => object[prop];\r\n\r\nexport const minMaxArrayProp = type => (property, array) =>\r\n    // eslint-disable-next-line prefer-spread\r\n    Math[type].apply(Math, array.map(prop(property)));\r\n\r\nexport const maxArrayProp = (property, array) => {\r\n    return array.reduce(\r\n        (acc, curr) => {\r\n            const propFn = prop(property);\r\n            const currentValue = propFn(curr);\r\n            const previousValue = propFn(acc);\r\n            return currentValue > previousValue ? curr : acc;\r\n        },\r\n        {[property]: 0}\r\n    );\r\n};\r\n","import {invert} from './utils';\r\n\r\nconst isMac = typeof navigator !== 'undefined' ? navigator.userAgent.includes('Mac OS') : false;\r\n\r\nexport const modifiers = {\r\n    shift: 'shiftKey',\r\n    ctrl: 'ctrlKey',\r\n    alt: 'altKey',\r\n    cmd: isMac ? 'metaKey' : 'ctrlKey',\r\n    command: isMac ? 'metaKey' : 'ctrlKey',\r\n    meta: isMac ? 'metaKey' : 'ctrlKey',\r\n    'left command': 'metaKey',\r\n    'right command': 'MetaRight',\r\n    '⌘': isMac ? 'metaKey' : 'ctrlKey',\r\n    option: 'altKey',\r\n    ctl: 'ctrlKey',\r\n    control: 'ctrlKey'\r\n};\r\nexport const _SPECIAL_CASES = {\r\n    plus: '+'\r\n};\r\n\r\nexport const symbols = {\r\n    cmd: isMac ? '⌘' : 'Ctrl',\r\n    command: isMac ? '⌘' : 'Ctrl',\r\n    'left command': isMac ? '⌘' : 'Ctrl',\r\n    'right command': isMac ? '⌘' : 'Ctrl',\r\n    option: isMac ? '⌥' : 'Alt',\r\n    plus: '+',\r\n    left: '←',\r\n    right: '→',\r\n    up: '↑',\r\n    down: '↓',\r\n    alt: isMac ? '⌥' : 'Alt',\r\n    ctrl: 'Ctrl',\r\n    control: 'Ctrl',\r\n    shift: '⇧'\r\n};\r\n\r\nexport const _MAP = {\r\n    8: 'backspace',\r\n    9: 'tab',\r\n    13: 'enter',\r\n    16: 'shift',\r\n    17: ['ctrl', 'control'],\r\n    18: 'alt',\r\n    20: 'capslock',\r\n    27: ['esc', 'escape'],\r\n    32: ['space', 'spc'],\r\n    33: 'pageup',\r\n    34: 'pagedown',\r\n    35: 'end',\r\n    36: 'home',\r\n    37: 'left',\r\n    38: 'up',\r\n    39: 'right',\r\n    40: 'down',\r\n    45: 'ins',\r\n    46: 'del',\r\n    91: ['meta', 'cmd', 'command'],\r\n    93: ['meta', 'cmd', 'command'],\r\n    224: ['meta', 'cmd', 'command']\r\n};\r\n\r\n/*\r\n * mapping for special characters so they can support\r\n *\r\n * this dictionary is only used incase you want to bind a\r\n * keyup or keydown event to one of these keys\r\n *\r\n */\r\nexport const _KEYCODE_MAP = {\r\n    106: '*',\r\n    107: '+',\r\n    109: '-',\r\n    110: '.',\r\n    111: '/',\r\n    186: ';',\r\n    187: '=',\r\n    188: ',',\r\n    189: '-',\r\n    190: '.',\r\n    191: '/',\r\n    192: '`',\r\n    219: '[',\r\n    220: '\\\\',\r\n    221: ']',\r\n    222: '\\''\r\n};\r\n\r\n/**\r\n * this is a mapping of keys that require shift on a US keypad\r\n * back to the non shift equivelents\r\n *\r\n * this is so you can use keyup events with these keys\r\n *\r\n * note that this will only work reliably on US keyboards\r\n *\r\n */\r\nexport const _SHIFT_MAP: Record<string, string> = {\r\n    '`': '~',\r\n    '1': '!',\r\n    '2': '@',\r\n    '3': '#',\r\n    '4': '$',\r\n    '5': '%',\r\n    '6': '^',\r\n    '7': '&',\r\n    '8': '*',\r\n    '9': '(',\r\n    '0': ')',\r\n    '-': '_',\r\n    '=': '+',\r\n    ';': ':',\r\n    '\\'': '\"',\r\n    ',': '<',\r\n    '.': '>',\r\n    '/': '?',\r\n    '\\\\': '|'\r\n};\r\nexport const _INVERTED_SHIFT_MAP = invert(_SHIFT_MAP);\r\n\r\n/**\r\n * loop through the f keys, f1 to f19 and add them to the map\r\n * programatically\r\n */\r\nfor (let i = 1; i < 20; ++i) {\r\n    _MAP[111 + i] = 'f' + i;\r\n}\r\n\r\n/**\r\n * loop through to map numbers on the numeric keypad\r\n */\r\nfor (let i = 0; i <= 9; ++i) {\r\n    // This needs to use a string cause otherwise since 0 is falsey\r\n    // event will never fire for numpad 0 pressed as part of a keydown\r\n    // event.\r\n    _MAP[i + 96] = i.toString();\r\n}\r\n","/**\r\n * The shortcut input for the Directive\r\n */\r\nexport interface Shortcut {\r\n\r\n    /**\r\n     * A key or list of keys to listen to and fire the command.\r\n     */\r\n    key: string | string[];\r\n\r\n    /**\r\n     * callback to be called when shortcut is pressed.\r\n     * @param event - the event out\r\n     */\r\n    command(event: ShortcutEventOutput): any;\r\n\r\n    /**\r\n     * Description for the command can be used for rendering help menu.\r\n     */\r\n    description?: string;\r\n\r\n    /**\r\n     * How much time to throttle in ms.\r\n     */\r\n    throttleTime?: number;\r\n\r\n    /**\r\n     * Label, can be used for grouping commands.\r\n     */\r\n    label?: string;\r\n\r\n    /**\r\n     * Prevent browser default, default: false\r\n     */\r\n    preventDefault?: boolean;\r\n}\r\n\r\n/**\r\n * The shortcut input type for ng-keyboard-shortcuts component\r\n */\r\nexport interface ShortcutInput extends Shortcut {\r\n    /**\r\n     * textarea, select and input are ignored by default, this is used to override\r\n     * this behavior.\r\n     * allow in node names, accepts: [\"TEXTAREA\", \"SELECT\", \"INPUT\", \"CONTENTEDITABLE\"]\r\n     */\r\n    allowIn?: AllowIn[];\r\n    /**\r\n     * Only trigger the command when the target is in focus.\r\n     */\r\n    target?: HTMLElement;\r\n}\r\n\r\nexport enum AllowIn {\r\n    Textarea = 'TEXTAREA',\r\n    Input = 'INPUT',\r\n    Select = 'SELECT',\r\n    ContentEditable = \"CONTENT-EDITABLE\"\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport interface ParsedShortcut extends ShortcutInput {\r\n    key: string[];\r\n    predicates: Function[][];\r\n    id: string;\r\n    priority?: number;\r\n    fullMatch?: boolean;\r\n    partialMatch?: boolean;\r\n    isSequence: boolean;\r\n    sequence?: string[][];\r\n    event?: KeyboardEvent;\r\n}\r\n\r\n/**\r\n * The output type fired by the command when shortcut is triggered.\r\n */\r\nexport interface ShortcutEventOutput {\r\n    /**\r\n     * The browser keyboard event\r\n     */\r\n    event: KeyboardEvent;\r\n    /**\r\n     * The registered key that was triggered\r\n     */\r\n    key: string[] | string;\r\n}\r\n","import { Inject, Injectable, OnDestroy } from \"@angular/core\";\r\nimport {\r\n    _INVERTED_SHIFT_MAP,\r\n    _KEYCODE_MAP,\r\n    _MAP,\r\n    _SHIFT_MAP,\r\n    _SPECIAL_CASES,\r\n    modifiers\r\n} from \"./keys\";\r\nimport {\r\n    BehaviorSubject,\r\n    combineLatest,\r\n    concatMap,\r\n    fromEvent,\r\n    mergeMap,\r\n    Observable,\r\n    of,\r\n    shareReplay,\r\n    Subject,\r\n    Subscription,\r\n    throwError,\r\n    timer,\r\n    zip\r\n} from \"rxjs\";\r\nimport {\r\n    AllowIn,\r\n    ParsedShortcut,\r\n    ShortcutEventOutput,\r\n    ShortcutInput\r\n} from \"./ng-keyboard-shortcuts.interfaces\";\r\nimport {\r\n    catchError,\r\n    filter,\r\n    first,\r\n    map,\r\n    repeat,\r\n    scan,\r\n    switchMap,\r\n    takeUntil,\r\n    tap,\r\n    throttle\r\n} from \"rxjs/operators\";\r\nimport { allPass, any, difference, identity, isFunction, isNill, maxArrayProp } from \"./utils\";\r\nimport { DOCUMENT } from \"@angular/common\";\r\n\r\n/**\r\n * @ignore\r\n * @type {number}\r\n */\r\nlet guid = 0;\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class KeyboardShortcutsService implements OnDestroy {\r\n    /**\r\n     * Parsed shortcuts\r\n     * for each key create a predicate function\r\n     */\r\n    private _shortcuts: ParsedShortcut[] = [];\r\n\r\n    private _sequences: ParsedShortcut[] = [];\r\n\r\n    /**\r\n     * Throttle the keypress event.\r\n     */\r\n    private throttleTime = 0;\r\n\r\n    private _pressed = new Subject<ShortcutEventOutput>();\r\n\r\n    /**\r\n     * Streams of pressed events, can be used instead or with a command.\r\n     */\r\n    public pressed$ = this._pressed.asObservable();\r\n\r\n    /**\r\n     * Disable all keyboard shortcuts\r\n     */\r\n    private disabled = false;\r\n    /**\r\n     * @ignore\r\n     * 2000 ms window to allow between key sequences otherwise\r\n     * the sequence will reset.\r\n     */\r\n    private static readonly TIMEOUT_SEQUENCE = 1000;\r\n\r\n    private _shortcutsSub = new BehaviorSubject<ParsedShortcut[]>([]);\r\n    public shortcuts$ = this._shortcutsSub\r\n        .pipe(filter((shortcuts) => !!shortcuts.length));\r\n\r\n    private _ignored = [AllowIn.Input, AllowIn.Textarea, AllowIn.Select, AllowIn.ContentEditable];\r\n\r\n    /**\r\n     * @ignore\r\n     * @param shortcut\r\n     */\r\n    private isAllowed = (shortcut: ParsedShortcut) => {\r\n        const target = shortcut.event.target as HTMLElement;\r\n        const isContentEditable = !!target.getAttribute(\"contenteditable\");\r\n        const nodeName = isContentEditable ? AllowIn.ContentEditable : target.nodeName;\r\n        if (target === shortcut.target) {\r\n            return true;\r\n        }\r\n        // if (shortcut.allowIn.includes(AllowIn.ContentEditable)) {\r\n        //     return !!target.getAttribute(\"contenteditable\");\r\n        // }\r\n        if (shortcut.allowIn.length) {\r\n            return !difference(this._ignored, shortcut.allowIn).includes(nodeName);\r\n        }\r\n        if (isContentEditable) {\r\n            return false;\r\n        }\r\n        return !this._ignored.includes(target.nodeName as AllowIn);\r\n    };\r\n\r\n    /**\r\n     * @ignore\r\n     * @param event\r\n     */\r\n    private mapEvent = (event) => {\r\n        return this._shortcuts\r\n            .filter((shortcut) => !shortcut.isSequence)\r\n            .map((shortcut) =>\r\n                Object.assign({}, shortcut, {\r\n                    predicates: any(\r\n                        identity,\r\n                        shortcut.predicates.map((predicates: any) => allPass(predicates)(event))\r\n                    ),\r\n                    event: event\r\n                })\r\n            )\r\n            .filter((shortcut) => shortcut.predicates)\r\n            .reduce((acc, shortcut) => (acc.priority > shortcut.priority ? acc : shortcut), {\r\n                priority: 0\r\n            } as ParsedShortcut);\r\n    };\r\n\r\n    /**\r\n     * @ignore\r\n     * Subscription for on destroy.\r\n     */\r\n    private readonly subscriptions: Subscription[] = [];\r\n\r\n    private keydown$: Observable<KeyboardEvent> = fromEvent(this.document, \"keydown\");\r\n    /**\r\n     * fixes for firefox prevent default\r\n     * on click event on button focus:\r\n     * see issue:\r\n     * keeping this here for now, but it is commented out\r\n     * Firefox reference bug:\r\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=1487102\r\n     * and my repo:\r\n     *\r\n     * https://github.com/omridevk/ng-keyboard-shortcuts/issues/35\r\n     */\r\n    private ignore$ = this.pressed$.pipe(\r\n        filter((e) => e.event.defaultPrevented),\r\n        switchMap(() => this.clicks$.pipe(first())),\r\n        tap((e: any) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }),\r\n        repeat()\r\n    );\r\n    /**\r\n     * @ignore\r\n     */\r\n    private clicks$ = fromEvent(this.document, \"click\", { capture: true });\r\n\r\n    private keyup$ = fromEvent(this.document, \"keyup\");\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    private keydownCombo$ = this.keydown$.pipe(\r\n        filter((_) => !this.disabled),\r\n        map(this.mapEvent),\r\n        filter(\r\n            (shortcut: ParsedShortcut) =>\r\n                !shortcut.target || shortcut.event.target === shortcut.target\r\n        ),\r\n        filter((shortcut: ParsedShortcut) => isFunction(shortcut.command)),\r\n        filter((shortcut) => this.isAllowed(shortcut)),\r\n        tap((shortcut) => {\r\n            if (!shortcut.preventDefault) {\r\n                return;\r\n            }\r\n            shortcut.event.preventDefault();\r\n            shortcut.event.stopPropagation();\r\n        }),\r\n        throttle((shortcut) => timer(shortcut.throttleTime)),\r\n        tap((shortcut) => shortcut.command({ event: shortcut.event, key: shortcut.key })),\r\n        tap((shortcut) => this._pressed.next({ event: shortcut.event, key: shortcut.key })),\r\n        takeUntil(this.keyup$),\r\n        repeat(),\r\n        catchError((error) => throwError(error))\r\n    );\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    private timer$ = new Subject();\r\n    /**\r\n     * @ignore\r\n     */\r\n    private resetCounter$ = this.timer$\r\n        .asObservable()\r\n        .pipe(switchMap(() => timer(KeyboardShortcutsService.TIMEOUT_SEQUENCE)));\r\n\r\n    private keydownSequence$ = this.keydown$.pipe(\r\n        map((event) => ({\r\n            event,\r\n            sequences: this._sequences\r\n        })),\r\n        scan(\r\n            (acc: { events: any[]; command?: any; sequences: any[] }, arg: any) => {\r\n                const { event } = arg;\r\n                const currentLength = acc.events.length;\r\n                const sequences = currentLength ? acc.sequences : arg.sequences;\r\n                const [characters] = this.characterFromEvent(event);\r\n                const allChars = Array.isArray(characters)\r\n                    ? [...characters, event.key]\r\n                    : [characters, event.key];\r\n                const result = sequences\r\n                    .map((sequence) => {\r\n                        const sequences = sequence.sequence.filter((seque) =>\r\n                            allChars.some(\r\n                                (key) =>\r\n                                    (_SPECIAL_CASES[seque[currentLength]] ||\r\n                                        seque[currentLength]) === key\r\n                            )\r\n                        );\r\n                        const partialMatch = sequences.length > 0;\r\n                        if (sequence.fullMatch) {\r\n                            return sequence;\r\n                        }\r\n                        return {\r\n                            ...sequence,\r\n                            sequence: sequences,\r\n                            partialMatch,\r\n                            event: event,\r\n                            fullMatch:\r\n                                partialMatch &&\r\n                                this.isFullMatch({ command: sequence, events: acc.events })\r\n                        };\r\n                    })\r\n                    .filter((sequences) => sequences.partialMatch || sequences.fullMatch);\r\n\r\n                const [match] = result;\r\n                if (!match || this.modifiersOn(event)) {\r\n                    return { events: [], sequences: this._sequences };\r\n                }\r\n                /*\r\n                 * handle case of \"?\" sequence and \"? a\" sequence\r\n                 * need to determine which one to trigger.\r\n                 * if both match, we pick the longer one (? a) in this case.\r\n                 */\r\n                const guess = maxArrayProp(\"priority\", result);\r\n                if (result.length > 1 && guess.fullMatch) {\r\n                    return { events: [], command: guess, sequences: this._sequences };\r\n                }\r\n                if (result.length > 1) {\r\n                    return {\r\n                        events: [...acc.events, event],\r\n                        command: result,\r\n                        sequences: result\r\n                    };\r\n                }\r\n                if (match.fullMatch) {\r\n                    return { events: [], command: match, sequences: this._sequences };\r\n                }\r\n                return {\r\n                    events: [...acc.events, event],\r\n                    command: result,\r\n                    sequences: result\r\n                };\r\n            },\r\n            { events: [], sequences: [] }\r\n        ),\r\n        switchMap(({ command }) => {\r\n            if (Array.isArray(command)) {\r\n                /*\r\n                 * Add a timer to handle the case where for example:\r\n                 * a sequence \"?\" is registered and \"? a\" is registered as well\r\n                 * if the user does not hit any key for 500ms, the single sequence will trigger\r\n                 * if any keydown event occur, this timer will reset, given a chance to complete\r\n                 * the full sequence (? a) in this case.\r\n                 * This delay only occurs when single key sequence is the beginning of another sequence.\r\n                 */\r\n                return timer(500).pipe(\r\n                    map(() => ({\r\n                        command: command.filter((command) => command.fullMatch)[0]\r\n                    }))\r\n                );\r\n            }\r\n            return of({ command });\r\n        }),\r\n        takeUntil(this.pressed$),\r\n        filter(({ command }) => command && command.fullMatch),\r\n        map(({ command }) => command),\r\n        filter((shortcut: ParsedShortcut) => isFunction(shortcut.command)),\r\n        filter(\r\n            (shortcut: ParsedShortcut) =>\r\n                !shortcut.target || shortcut.event.target === shortcut.target\r\n        ),\r\n        filter(this.isAllowed),\r\n        tap((shortcut) => !shortcut.preventDefault || shortcut.event.preventDefault()),\r\n        throttle((shortcut) => timer(shortcut.throttleTime)),\r\n        tap((shortcut) => shortcut.command({ event: shortcut.event, key: shortcut.key })),\r\n        tap((shortcut) => this._pressed.next({ event: shortcut.event, key: shortcut.key })),\r\n        takeUntil(this.resetCounter$),\r\n        repeat()\r\n    );\r\n\r\n    /**\r\n     * @ignore\r\n     * @param command\r\n     * @param events\r\n     */\r\n    private isFullMatch({ command, events }) {\r\n        if (!command) {\r\n            return false;\r\n        }\r\n        return command.sequence.some((sequence) => {\r\n            return sequence.length === events.length + 1;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    private get shortcuts() {\r\n        return this._shortcuts;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    constructor(@Inject(DOCUMENT) private document: any) {\r\n        this.subscriptions.push(\r\n            this.keydownSequence$.subscribe(),\r\n            this.keydownCombo$.subscribe()\r\n            // this.ignore$.subscribe()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @param event\r\n     */\r\n    private _characterFromEvent(event): [string, boolean] {\r\n        if (typeof event.which !== \"number\") {\r\n            event.which = event.keyCode;\r\n        }\r\n        if (_SPECIAL_CASES[event.which]) {\r\n            return [_SPECIAL_CASES[event.which], event.shiftKey];\r\n        }\r\n        if (_MAP[event.which]) {\r\n            // for non keypress events the special maps are needed\r\n            return [_MAP[event.which], event.shiftKey];\r\n        }\r\n\r\n        if (_KEYCODE_MAP[event.which]) {\r\n            return [_KEYCODE_MAP[event.which], event.shiftKey];\r\n        }\r\n        // in case event key is lower case but registered key is upper case\r\n        // return it in the lower case\r\n        if (String.fromCharCode(event.which).toLowerCase() !== event.key) {\r\n            return [String.fromCharCode(event.which).toLowerCase(), event.shiftKey];\r\n        }\r\n        return [event.key, event.shiftKey];\r\n    }\r\n\r\n    private characterFromEvent(event) {\r\n        const [key, shiftKey] = this._characterFromEvent(event);\r\n        if (shiftKey && _SHIFT_MAP[key]) {\r\n            return [_SHIFT_MAP[key], shiftKey];\r\n        }\r\n        return [key, shiftKey];\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * Remove subscription.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach((sub) => sub.unsubscribe());\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @param shortcuts\r\n     */\r\n    private isSequence(shortcuts: string[]): boolean {\r\n        return !shortcuts.some((shortcut) => shortcut.includes(\"+\") || shortcut.length === 1);\r\n    }\r\n\r\n    /**\r\n     * Add new shortcut/s\r\n     */\r\n    public add(shortcuts: ShortcutInput[] | ShortcutInput): string[] {\r\n        shortcuts = Array.isArray(shortcuts) ? shortcuts : [shortcuts];\r\n        const commands = this.parseCommand(shortcuts);\r\n        commands.forEach((command) => {\r\n            if (command.isSequence) {\r\n                this._sequences.push(command);\r\n                return;\r\n            }\r\n            this._shortcuts.push(command);\r\n        });\r\n        setTimeout(() => {\r\n            this._shortcutsSub.next([...this._shortcuts, ...this._sequences]);\r\n        });\r\n        return commands.map((command) => command.id);\r\n    }\r\n\r\n    /**\r\n     * Remove a command based on key or array of keys.\r\n     * can be used for cleanup.\r\n     * @returns\r\n     * @param ids\r\n     */\r\n    public remove(ids: string | string[]): KeyboardShortcutsService {\r\n        ids = Array.isArray(ids) ? ids : [ids];\r\n        this._shortcuts = this._shortcuts.filter((shortcut) => !ids.includes(shortcut.id));\r\n        this._sequences = this._sequences.filter((shortcut) => !ids.includes(shortcut.id));\r\n        setTimeout(() => {\r\n            this._shortcutsSub.next([...this._shortcuts, ...this._sequences]);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns an observable of keyboard shortcut filtered by a specific key.\r\n     * @param key - the key to filter the observable by.\r\n     */\r\n    public select(key: string): Observable<ShortcutEventOutput> {\r\n        return this.pressed$.pipe(\r\n            filter(({ event, key: eventKeys }) => {\r\n                eventKeys = Array.isArray(eventKeys) ? eventKeys : [eventKeys];\r\n                return !!eventKeys.find((eventKey) => eventKey === key);\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * transforms a shortcut to:\r\n     * a predicate function\r\n     */\r\n    private getKeys = (keys: string[]) => {\r\n        return keys\r\n            .map((key) => key.trim())\r\n            .filter((key) => key !== \"+\")\r\n            .map((key) => {\r\n                // for modifiers like control key\r\n                // look for event['ctrlKey']\r\n                // otherwise use the keyCode\r\n                key = _SPECIAL_CASES[key] || key;\r\n                // eslint-disable-next-line no-prototype-builtins\r\n                if (modifiers.hasOwnProperty(key)) {\r\n                    return (event) => {\r\n                        return !!event[modifiers[key]];\r\n                    };\r\n                }\r\n\r\n                return (event: KeyboardEvent) => {\r\n                    const isUpper = key === key.toUpperCase();\r\n                    const isNonAlpha = /[^a-zA-Z\\d\\s:]/.test(key);\r\n                    const inShiftMap = _INVERTED_SHIFT_MAP[key];\r\n                    const [characters] = this.characterFromEvent(event);\r\n                    const allModifiers = Object.keys(modifiers).map((key) => {\r\n                        return modifiers[key];\r\n                    });\r\n                    const hasModifiers = allModifiers.some((modifier) => event[modifier]);\r\n\r\n                    const result = Array.isArray(characters)\r\n                        ? [...characters, event.key]\r\n                        : [characters, event.key];\r\n\r\n                    // if has modifiers:\r\n                    // we want to make sure it is not upper case letters\r\n                    // (because upper has modifiers so we want continue the check)\r\n                    // we also want to make sure it is not alphanumeric char like ? / ^ & and others (since those could require modifiers as well)\r\n                    // we also want to check this only if the length of\r\n                    // of the keys is one (i.e the command key is \"?\" or \"c\"\r\n                    // this while check is here to verify that:\r\n                    // if registered key like \"e\"\r\n                    // it won't be fired when clicking ctrl + e, or any modifiers + the key\r\n                    // we only want to trigger when the single key is clicked alone\r\n                    // thus all these edge cases.\r\n                    // hopefully this would cover all cases\r\n                    // TODO:: find a way simplify this\r\n                    if (\r\n                        hasModifiers &&\r\n                        (!isUpper || isNonAlpha) &&\r\n                        !inShiftMap &&\r\n                        keys.length === 1\r\n                    ) {\r\n                        return false;\r\n                    }\r\n                    return result.some((char) => {\r\n                        if (char === key && isUpper) {\r\n                            return true;\r\n                        }\r\n                        return key === char;\r\n                    });\r\n                };\r\n            });\r\n    };\r\n\r\n    /**\r\n     * @ignore\r\n     * @param event\r\n     */\r\n    private modifiersOn(event) {\r\n        return [\"metaKey\", \"altKey\", \"ctrlKey\"].some((mod) => event[mod]);\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * Parse each command using getKeys function\r\n     */\r\n    private parseCommand(command: ShortcutInput | ShortcutInput[]): ParsedShortcut[] {\r\n        const commands = Array.isArray(command) ? command : [command];\r\n        return commands.map((command) => {\r\n            const keys = Array.isArray(command.key) ? command.key : [command.key];\r\n            const priority = Math.max(...keys.map((key) => key.split(\" \").filter(identity).length));\r\n            const predicates = keys.map((key) => this.getKeys(key.split(\" \").filter(identity)));\r\n            const isSequence = this.isSequence(keys);\r\n            const sequence = isSequence\r\n                ? keys.map((key) =>\r\n                      key\r\n                          .split(\" \")\r\n                          .filter(identity)\r\n                          .map((key) => key.trim())\r\n                  )\r\n                : [];\r\n            return {\r\n                ...command,\r\n                isSequence,\r\n                sequence: isSequence ? sequence : [],\r\n                allowIn: command.allowIn || [],\r\n                key: keys,\r\n                id: `${guid++}`,\r\n                throttle: isNill(command.throttleTime) ? this.throttleTime : command.throttleTime,\r\n                priority: priority,\r\n                predicates: predicates\r\n            } as ParsedShortcut;\r\n        });\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    SimpleChanges\r\n} from '@angular/core';\r\nimport {KeyboardShortcutsService} from './ng-keyboard-shortcuts.service';\r\nimport {ShortcutInput, ShortcutEventOutput} from './ng-keyboard-shortcuts.interfaces';\r\nimport {Observable} from 'rxjs';\r\n\r\n/**\r\n * A component to bind global shortcuts, can be used multiple times across the app\r\n * will remove registered shortcuts when element is removed from DOM.\r\n */\r\n@Component({\r\n    selector: 'ng-keyboard-shortcuts',\r\n    template: ''\r\n})\r\nexport class KeyboardShortcutsComponent implements OnChanges, OnDestroy {\r\n    /**\r\n     * A list of shortcuts.\r\n     */\r\n    @Input() shortcuts: ShortcutInput[] | ShortcutInput = [];\r\n\r\n    /**\r\n     * @ignore\r\n     * list of registered keyboard shortcuts\r\n     * used for clean up on NgDestroy.\r\n     */\r\n    private clearIds: string[] = [];\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    private _disabled = false;\r\n    /**\r\n     * Disable all shortcuts for this component.\r\n     */\r\n    @Input() set disabled(value) {\r\n        this._disabled = value;\r\n        if (this.clearIds) {\r\n            this.keyboard.remove(this.clearIds);\r\n            this.clearIds = [];\r\n        }\r\n        if (value) {\r\n            return;\r\n        }\r\n        this.clearIds = this.keyboard.add(this.shortcuts);\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @param {KeyboardShortcutsService} keyboard\r\n     */\r\n    constructor(private keyboard: KeyboardShortcutsService) {\r\n    }\r\n\r\n    /**\r\n     * Select a key to listen to, will emit when the selected key is pressed.\r\n     */\r\n    public select(key: string): Observable<ShortcutEventOutput> {\r\n        return this.keyboard.select(key);\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (!changes['shortcuts'] || !changes['shortcuts'].currentValue) {\r\n            return;\r\n        }\r\n        if (this.clearIds) {\r\n            this.keyboard.remove(this.clearIds);\r\n        }\r\n        if (!this._disabled) {\r\n            setTimeout(() => (this.clearIds = this.keyboard.add(changes['shortcuts'].currentValue)));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.keyboard.remove(this.clearIds);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {KeyboardShortcutsService} from './ng-keyboard-shortcuts.service';\r\nimport {map} from 'rxjs/operators';\r\n\r\n/**\r\n * Service to assist showing custom help screen\r\n */\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class KeyboardShortcutsHelpService {\r\n    /**\r\n     * @ignore\r\n     * @param {KeyboardShortcutsService} keyboard\r\n     */\r\n    constructor(private keyboard: KeyboardShortcutsService) {\r\n    }\r\n\r\n    /**\r\n     * Observable to provide access to all registered shortcuts in the app.\r\n     * @type {Observable<any>}\r\n     */\r\n    public shortcuts$ = this.keyboard.shortcuts$.pipe(\r\n        map(shortcuts =>\r\n            shortcuts\r\n                .filter(shortcut => Boolean(shortcut.label) && Boolean(shortcut.description))\r\n                .map(({key, label, description}) => ({\r\n                    key,\r\n                    label,\r\n                    description\r\n                }))\r\n        )\r\n    );\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {KeyboardShortcutsService} from './ng-keyboard-shortcuts.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n/**\r\n * Use this service to listen to a specific keyboards events using Rxjs.\r\n * The shortcut must be declared in the app for the select to work.\r\n */\r\nexport class KeyboardShortcutsSelectService {\r\n    constructor(private keyboardService: KeyboardShortcutsService) {\r\n    }\r\n\r\n    /**\r\n     * Returns an observable of keyboard shortcut filtered by a specific key.\r\n     * @param key - the key to filter the observable by.\r\n     */\r\n    public select(key: string) {\r\n        return this.keyboardService.select(key);\r\n    }\r\n}\r\n","import {Directive, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\r\nimport {AllowIn, Shortcut} from './ng-keyboard-shortcuts.interfaces';\r\nimport {KeyboardShortcutsService} from './ng-keyboard-shortcuts.service';\r\n\r\n/**\r\n * A directive to be used with \"focusable\" elements, like:\r\n * textarea, input, select.\r\n */\r\n@Directive({\r\n    selector: '[ngKeyboardShortcuts]'\r\n})\r\nexport class KeyboardShortcutsDirective implements OnDestroy, OnChanges {\r\n    /**\r\n     * clearId to remove shortcuts.\r\n     */\r\n    private clearIds;\r\n    /**\r\n     * Shortcut inputs for the directive.\r\n     * will only work when the element is in focus\r\n     */\r\n    @Input() ngKeyboardShortcuts: Shortcut[];\r\n    /**\r\n     * @ignore\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    private _disabled = false;\r\n\r\n    /**\r\n     * whether to disable the shortcuts for this directive\r\n     * @param value\r\n     */\r\n    @Input() set disabled(value) {\r\n        this._disabled = value;\r\n        if (this.clearIds) {\r\n            this.keyboard.remove(this.clearIds);\r\n        }\r\n        setTimeout(() => {\r\n            if (value === false && this.ngKeyboardShortcuts) {\r\n                this.clearIds = this.keyboard.add(this.transformInput(this.ngKeyboardShortcuts));\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @param {KeyboardShortcutsService} keyboard\r\n     * @param {ElementRef} el\r\n     */\r\n    constructor(private keyboard: KeyboardShortcutsService, private el: ElementRef) {\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @param {Shortcut[]} shortcuts\r\n     * @returns {any}\r\n     */\r\n    private transformInput(shortcuts: Shortcut[]) {\r\n        return shortcuts.map(shortcut => ({\r\n            ...shortcut,\r\n            target: this.el.nativeElement,\r\n            allowIn: [AllowIn.Select, AllowIn.Input, AllowIn.Textarea]\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    ngOnDestroy() {\r\n        if (!this.clearIds) {\r\n            return;\r\n        }\r\n        this.keyboard.remove(this.clearIds);\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @param {SimpleChanges} changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        const {ngKeyboardShortcuts} = changes;\r\n        if (this.clearIds) {\r\n            this.keyboard.remove(this.clearIds);\r\n        }\r\n        if (!ngKeyboardShortcuts || !ngKeyboardShortcuts.currentValue) {\r\n            return;\r\n        }\r\n        this.clearIds = this.keyboard.add(this.transformInput(ngKeyboardShortcuts.currentValue));\r\n    }\r\n}\r\n","import {\r\n    TemplateRef,\r\n    ViewContainerRef,\r\n    ElementRef,\r\n    ComponentRef,\r\n    EmbeddedViewRef,\r\n    Injector,\r\n    ComponentFactoryResolver,\r\n} from '@angular/core';\r\n\r\n/**\r\n * @ignore\r\n * Interface that can be used to generically type a class.\r\n */\r\nexport interface ComponentType<T> {\r\n    new(...args: any[]): T;\r\n}\r\n\r\n/**\r\n * @ignore\r\n * A `Portal` is something that you want to render somewhere else.\r\n * It can be attach to / detached from a `PortalOutlet`.\r\n */\r\nexport abstract class Portal<T> {\r\n    private _attachedHost: PortalOutlet | null;\r\n\r\n    /** Attach this portal to a host. */\r\n    attach(host: PortalOutlet): T {\r\n        if (host == null) {\r\n            // TODO: add error\r\n            console.error('null portal error');\r\n        }\r\n\r\n        if (host.hasAttached()) {\r\n            console.error('portal already attached');\r\n            // throwPortalAlreadyAttachedError();\r\n        }\r\n\r\n        this._attachedHost = host;\r\n        return <T>host.attach(this);\r\n    }\r\n\r\n    /** Detach this portal from its host */\r\n    detach(): void {\r\n        const host = this._attachedHost;\r\n\r\n        if (host == null) {\r\n            console.error('no portal attached!');\r\n            // throwNoPortalAttachedError();\r\n        } else {\r\n            this._attachedHost = null;\r\n            host.detach();\r\n        }\r\n    }\r\n\r\n    /** Whether this portal is attached to a host. */\r\n    get isAttached(): boolean {\r\n        return this._attachedHost != null;\r\n    }\r\n\r\n    /**\r\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\r\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\r\n     */\r\n    setAttachedHost(host: PortalOutlet | null) {\r\n        this._attachedHost = host;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @ignore\r\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\r\n */\r\nexport class ComponentPortal<T> extends Portal<ComponentRef<T>> {\r\n    /** The type of the component that will be instantiated for attachment. */\r\n    component: ComponentType<T>;\r\n\r\n    /**\r\n     * [Optional] Where the attached component should live in Angular's *logical* component tree.\r\n     * This is different from where the component *renders*, which is determined by the PortalOutlet.\r\n     * The origin is necessary when the host is outside of the Angular application context.\r\n     */\r\n    viewContainerRef?: ViewContainerRef | null;\r\n\r\n    /** [Optional] Injector used for the instantiation of the component. */\r\n    injector?: Injector | null;\r\n\r\n    /**\r\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\r\n     * Defaults to using the resolver from the outlet that the portal is attached to.\r\n     */\r\n    componentFactoryResolver?: ComponentFactoryResolver | null;\r\n\r\n    constructor(\r\n        component: ComponentType<T>,\r\n        viewContainerRef?: ViewContainerRef | null,\r\n        injector?: Injector | null,\r\n        componentFactoryResolver?: ComponentFactoryResolver | null) {\r\n        super();\r\n        this.component = component;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.injector = injector;\r\n        this.componentFactoryResolver = componentFactoryResolver;\r\n    }\r\n}\r\n\r\n/**\r\n * @ignore\r\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\r\n */\r\nexport class TemplatePortal<C = any> extends Portal<C> {\r\n    /** The embedded template that will be used to instantiate an embedded View in the host. */\r\n    templateRef: TemplateRef<C>;\r\n\r\n    /** Reference to the ViewContainer into which the template will be stamped out. */\r\n    viewContainerRef: ViewContainerRef;\r\n\r\n    /** Contextual data to be passed in to the embedded view. */\r\n    context: C | undefined;\r\n\r\n    constructor(template: TemplateRef<C>, viewContainerRef: ViewContainerRef, context?: C) {\r\n        super();\r\n        this.templateRef = template;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.context = context;\r\n    }\r\n\r\n    get origin(): ElementRef {\r\n        return this.templateRef.elementRef;\r\n    }\r\n\r\n    /**\r\n     * Attach the portal to the provided `PortalOutlet`.\r\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\r\n     * instance.\r\n     */\r\n    override attach(host: PortalOutlet, context: C | undefined = this.context): C {\r\n        this.context = context;\r\n        return super.attach(host);\r\n    }\r\n\r\n    override detach(): void {\r\n        this.context = undefined;\r\n        return super.detach();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @ignore\r\n * A `PortalOutlet` is an space that can contain a single `Portal`.\r\n */\r\nexport interface PortalOutlet {\r\n    /** Attaches a portal to this outlet. */\r\n    attach(portal: Portal<any>): any;\r\n\r\n    /** Detaches the currently attached portal from this outlet. */\r\n    detach(): any;\r\n\r\n    /** Performs cleanup before the outlet is destroyed. */\r\n    dispose(): void;\r\n\r\n    /** Whether there is currently a portal attached to this outlet. */\r\n    hasAttached(): boolean;\r\n}\r\n\r\n\r\n/**\r\n * @ignore\r\n * Partial implementation of PortalOutlet that handles attaching\r\n * ComponentPortal and TemplatePortal.\r\n */\r\nexport abstract class BasePortalOutlet implements PortalOutlet {\r\n    /** The portal currently attached to the host. */\r\n    protected _attachedPortal: Portal<any> | null;\r\n\r\n    /** A function that will permanently dispose this host. */\r\n    private _disposeFn: (() => void) | null;\r\n\r\n    /** Whether this host has already been permanently disposed. */\r\n    private _isDisposed = false;\r\n\r\n    /** Whether this host has an attached portal. */\r\n    hasAttached(): boolean {\r\n        return !!this._attachedPortal;\r\n    }\r\n\r\n    attach<T>(portal: ComponentPortal<T>): ComponentRef<T>;\r\n    attach<T>(portal: TemplatePortal<T>): EmbeddedViewRef<T>;\r\n    attach(portal: any): any;\r\n\r\n    /** Attaches a portal. */\r\n    attach(portal: Portal<any>): any {\r\n        if (!portal) {\r\n            console.error('null portal!');\r\n            // throwNullPortalError();\r\n        }\r\n\r\n        if (this.hasAttached()) {\r\n            console.error('portal already attached');\r\n            // throwPortalAlreadyAttachedError();\r\n        }\r\n\r\n        if (this._isDisposed) {\r\n            console.error('portal out already disposed');\r\n            // throwPortalOutletAlreadyDisposedError();\r\n        }\r\n\r\n        if (portal instanceof ComponentPortal) {\r\n            this._attachedPortal = portal;\r\n            return this.attachComponentPortal(portal);\r\n        } else if (portal instanceof TemplatePortal) {\r\n            this._attachedPortal = portal;\r\n            return this.attachTemplatePortal(portal);\r\n        }\r\n        console.error('unknown portal type');\r\n        // throwUnknownPortalTypeError();\r\n    }\r\n\r\n    abstract attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T>;\r\n\r\n    abstract attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C>;\r\n\r\n    /** Detaches a previously attached portal. */\r\n    detach(): void {\r\n        if (this._attachedPortal) {\r\n            this._attachedPortal.setAttachedHost(null);\r\n            this._attachedPortal = null;\r\n        }\r\n\r\n        this._invokeDisposeFn();\r\n    }\r\n\r\n    /** Permanently dispose of this portal host. */\r\n    dispose(): void {\r\n        if (this.hasAttached()) {\r\n            this.detach();\r\n        }\r\n\r\n        this._invokeDisposeFn();\r\n        this._isDisposed = true;\r\n    }\r\n\r\n    /** @docs-private */\r\n    setDisposeFn(fn: () => void) {\r\n        this._disposeFn = fn;\r\n    }\r\n\r\n    private _invokeDisposeFn() {\r\n        if (this._disposeFn) {\r\n            this._disposeFn();\r\n            this._disposeFn = null;\r\n        }\r\n    }\r\n}\r\n","import {\r\n    ComponentFactoryResolver,\r\n    ComponentRef,\r\n    EmbeddedViewRef,\r\n    ApplicationRef,\r\n    Injector,\r\n} from '@angular/core';\r\nimport {BasePortalOutlet, ComponentPortal, TemplatePortal} from './portal';\r\n\r\n\r\n/**\r\n * @ignore\r\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\r\n * application context.\r\n */\r\nexport class DomPortalOutlet extends BasePortalOutlet {\r\n    constructor(\r\n        /** Element into which the content is projected. */\r\n        public outletElement: Element,\r\n        private _componentFactoryResolver: ComponentFactoryResolver,\r\n        private _appRef: ApplicationRef,\r\n        private _defaultInjector: Injector) {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\r\n     * @param portal Portal to be attached\r\n     * @returns Reference to the created component.\r\n     */\r\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\r\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\r\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\r\n        let componentRef: ComponentRef<T>;\r\n\r\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\r\n        // for the component (in terms of Angular's component tree, not rendering).\r\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\r\n        // and then manually attach the view to the application.\r\n        if (portal.viewContainerRef) {\r\n            componentRef = portal.viewContainerRef.createComponent(\r\n                componentFactory,\r\n                portal.viewContainerRef.length,\r\n                portal.injector || portal.viewContainerRef.injector);\r\n\r\n            this.setDisposeFn(() => componentRef.destroy());\r\n        } else {\r\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\r\n            this._appRef.attachView(componentRef.hostView);\r\n            this.setDisposeFn(() => {\r\n                this._appRef.detachView(componentRef.hostView);\r\n                componentRef.destroy();\r\n            });\r\n        }\r\n        // At this point the component has been instantiated, so we move it to the location in the DOM\r\n        // where we want it to be rendered.\r\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\r\n\r\n        return componentRef;\r\n    }\r\n\r\n    /**\r\n     * Attaches a template portal to the DOM as an embedded view.\r\n     * @param portal Portal to be attached.\r\n     * @returns Reference to the created embedded view.\r\n     */\r\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\r\n        const viewContainer = portal.viewContainerRef;\r\n        const viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\r\n        viewRef.detectChanges();\r\n\r\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\r\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\r\n        // (e.g Overlay Container) To move the view to the specified host element. We just\r\n        // re-append the existing root nodes.\r\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\r\n\r\n        this.setDisposeFn((() => {\r\n            const index = viewContainer.indexOf(viewRef);\r\n            if (index !== -1) {\r\n                viewContainer.remove(index);\r\n            }\r\n        }));\r\n\r\n        return viewRef;\r\n    }\r\n\r\n    /**\r\n     * Clears out a portal from the DOM.\r\n     */\r\n    override dispose(): void {\r\n        super.dispose();\r\n        if (this.outletElement.parentNode != null) {\r\n            this.outletElement.parentNode.removeChild(this.outletElement);\r\n        }\r\n    }\r\n\r\n    /** Gets the root HTMLElement for an instantiated component. */\r\n    private _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\r\n        return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n    }\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Shortcut} from './ng-keyboard-shortcuts.interfaces';\r\nimport {symbols} from './keys';\r\nimport {identity} from './utils';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@Component({\r\n    selector: 'ng-keyboard-shortcuts-help-item',\r\n    templateUrl: './ng-keyboard-shortcuts-help-item.component.html',\r\n    styleUrls: ['./ng-keyboard-shortcuts-help-item.component.scss']\r\n})\r\nexport class KeyboardShortcutsHelpItemComponent implements OnInit {\r\n    public parsedKeys: string[][];\r\n\r\n    @Input() index: number;\r\n\r\n    @Input()\r\n    set shortcut(shortcut: Shortcut) {\r\n        const key = Array.isArray(shortcut.key) ? shortcut.key : [shortcut.key];\r\n        this.parsedKeys = key.map(key =>\r\n            key\r\n                .split(' ')\r\n                .filter(identity)\r\n                .filter(key => key !== '+')\r\n                .map(key => {\r\n                    if (symbols[key]) {\r\n                        return symbols[key];\r\n                    }\r\n                    return key;\r\n                })\r\n        );\r\n        this._shortcut = shortcut;\r\n    }\r\n\r\n    get shortcut() {\r\n        return this._shortcut;\r\n    }\r\n\r\n    private _shortcut: Shortcut;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","<div class=\"item\" [class.item--odd]=\"index % 2 !== 0\" *ngIf=\"shortcut.description\">\r\n    <div class=\"description\">\r\n        <span>{{shortcut.description}}</span>\r\n    </div>\r\n    <div class=\"keys\">\r\n        <div *ngFor=\"let sKey of parsedKeys;let i = index\" class=\"key__container\">\r\n            <span class=\"key\" *ngFor=\"let key of sKey;\">{{key}}</span>\r\n            <span *ngIf=\"parsedKeys.length > 1 && i < parsedKeys.length - 1\" class=\"separator\"> / </span>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {\r\n    ApplicationRef,\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    ElementRef,\r\n    Injector,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    SimpleChanges,\r\n    TemplateRef,\r\n    ViewChild,\r\n    ViewContainerRef\r\n} from \"@angular/core\";\r\nimport { DomPortalOutlet } from \"./dom-portal-outlet\";\r\nimport { TemplatePortal } from \"./portal\";\r\nimport { KeyboardShortcutsService } from \"./ng-keyboard-shortcuts.service\";\r\nimport { KeyboardShortcutsHelpService } from \"./ng-keyboard-shortcuts-help.service\";\r\nimport { animate, style, transition, trigger } from \"@angular/animations\";\r\nimport { distinctUntilChanged, map } from \"rxjs/operators\";\r\nimport { groupBy } from \"./utils\";\r\nimport { SubscriptionLike } from \"rxjs\";\r\nimport { Shortcut } from \"./ng-keyboard-shortcuts.interfaces\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst scrollAbleKeys = new Map([\r\n    [31, 1],\r\n    [38, 1],\r\n    [39, 1],\r\n    [40, 1]\r\n]);\r\n/**\r\n * @ignore\r\n */\r\nconst preventDefault = (ignore: string) => (e) => {\r\n    const modal = e.target.closest(ignore);\r\n    if (modal) {\r\n        return;\r\n    }\r\n    e = e || window.event;\r\n    if (e.preventDefault) {\r\n        e.preventDefault();\r\n    }\r\n    e.returnValue = false;\r\n};\r\n/**\r\n * @ignore\r\n */\r\nconst preventDefaultForScrollKeys = (e) => {\r\n    if (!scrollAbleKeys.has(e.keyCode)) {\r\n        return true;\r\n    }\r\n    preventDefault(e);\r\n    return false;\r\n};\r\n/**\r\n * @ignore\r\n */\r\nlet scrollEvents = [\r\n    { name: \"wheel\", callback: null },\r\n    { name: \"touchmove\", callback: null },\r\n    { name: \"DOMMouseScroll\", callback: null }\r\n];\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst disableScroll = (ignore: string) => {\r\n    scrollEvents = scrollEvents.map((event) => {\r\n        const callback = preventDefault(ignore);\r\n        window.addEventListener(event.name, callback, { passive: false });\r\n        return {\r\n            ...event,\r\n            callback\r\n        };\r\n    });\r\n    window.addEventListener(\"keydown\", preventDefaultForScrollKeys);\r\n};\r\n/**\r\n * @ignore\r\n */\r\nconst enableScroll = () => {\r\n    scrollEvents = scrollEvents.map((event) => {\r\n        window.removeEventListener(event.name, event.callback);\r\n        return {\r\n            ...event,\r\n            callback: null\r\n        };\r\n    });\r\n    window.removeEventListener(\"keydown\", preventDefaultForScrollKeys);\r\n};\r\n\r\n/**\r\n * A Component to show all registered shortcut in the app\r\n * it is shown as a modal\r\n */\r\n@Component({\r\n    selector: \"ng-keyboard-shortcuts-help\",\r\n    templateUrl: \"./ng-keyboard-shortcuts-help.component.html\",\r\n    styleUrls: [\"./ng-keyboard-shortcuts-help.component.scss\"],\r\n    animations: [\r\n        trigger(\"enterAnimation\", [\r\n            transition(\":enter\", [\r\n                style({ transform: \"translateX(-100%)\", opacity: 0 }),\r\n                animate(\r\n                    \"0.33s cubic-bezier(0,0,0.3,1)\",\r\n                    style({ transform: \"translateX(0)\", opacity: 1 })\r\n                )\r\n            ]),\r\n            transition(\":leave\", [\r\n                style({ transform: \"translateX(0)\", opacity: 1 }),\r\n                animate(\r\n                    \"0.23s cubic-bezier(0,0,0.3,1)\",\r\n                    style({ transform: \"translateX(-100%)\", opacity: 0 })\r\n                )\r\n            ])\r\n        ]),\r\n        trigger(\"overlayAnimation\", [\r\n            transition(\":enter\", [\r\n                style({ opacity: 0 }),\r\n                animate(\"1s cubic-bezier(0,0,0.3,1)\", style({ opacity: 1 }))\r\n            ]),\r\n            transition(\":leave\", [\r\n                style({ opacity: 1 }),\r\n                animate(\"1s cubic-bezier(0,0,0.3,1)\", style({ opacity: 0 }))\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class KeyboardShortcutsHelpComponent implements OnInit, OnDestroy, OnChanges {\r\n    /**\r\n     * Disable scrolling while modal is open\r\n     */\r\n    @Input() disableScrolling = true;\r\n    /**\r\n     * @ignore\r\n     */\r\n    private _key: string;\r\n\r\n    public className = \"help-modal\";\r\n\r\n    /**\r\n     * A description that will be shown in the help menu.\r\n     * MUST almost provide a label for the key to be shown\r\n     * in the help menu\r\n     */\r\n    @Input() keyDescription: string;\r\n\r\n    /**\r\n     * The label to group by the help menu toggle shortcut.\r\n     * must provide a description for the key to show\r\n     * in the help menu\r\n     */\r\n    @Input() keyLabel: string;\r\n\r\n    /**\r\n     * The label to group by the help menu close shortcut.\r\n     * must provide a description for the key to show\r\n     * in the help menu\r\n     */\r\n    @Input() closeKeyLabel: string;\r\n\r\n    /**\r\n     * A description that will be shown in the help menu.\r\n     * MUST almost provide a label for the key to be shown\r\n     * in the help menu\r\n     */\r\n    @Input() closeKeyDescription: string;\r\n\r\n    /**\r\n     * The shortcut to show/hide the help screen\r\n     */\r\n    @Input()\r\n    set key(value: string) {\r\n        this._key = value;\r\n        if (!value) {\r\n            return;\r\n        }\r\n        if (this.clearIds) {\r\n            this.keyboard.remove(this.clearIds);\r\n        }\r\n        this.clearIds = this.addShortcut({\r\n            key: value,\r\n            preventDefault: true,\r\n            command: () => this.toggle(),\r\n            description: this.keyDescription,\r\n            label: this.keyLabel\r\n        });\r\n    }\r\n\r\n    private addShortcut(shortcut: Shortcut) {\r\n        return this.keyboard.add(shortcut);\r\n    }\r\n\r\n    private _closeKey;\r\n    @Input() closeKey;\r\n\r\n    /**\r\n     * The title of the help screen\r\n     * @default: \"Keyboard shortcuts\"\r\n     */\r\n    @Input() title = \"Keyboard shortcuts\";\r\n    /**\r\n     * What message to show when no shortcuts are available on the page.\r\n     * @default \"No shortcuts available\"\r\n     */\r\n    @Input() emptyMessage = \"No shortcuts available\";\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild(TemplateRef) template: TemplateRef<any>;\r\n    /**\r\n     * @ignore\r\n     */\r\n    shortcuts: Record<\"label\", { key: string[]; label: string; description: string }[]>;\r\n    /**\r\n     * @ignore\r\n     */\r\n    showing = false;\r\n    /**\r\n     * @ignore\r\n     */\r\n    labels: string[];\r\n    /**\r\n     * @ignore\r\n     */\r\n    private bodyPortalHost: DomPortalOutlet;\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    constructor(\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n        private appRef: ApplicationRef,\r\n        private keyboard: KeyboardShortcutsService,\r\n        private element: ElementRef,\r\n        private keyboardHelp: KeyboardShortcutsHelpService,\r\n        private viewContainer: ViewContainerRef,\r\n        private injector: Injector\r\n    ) {\r\n        this.bodyPortalHost = new DomPortalOutlet(\r\n            document.body,\r\n            this.componentFactoryResolver,\r\n            this.appRef,\r\n            this.injector\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Reveal the help screen manually.\r\n     */\r\n    reveal(): KeyboardShortcutsHelpComponent {\r\n        this.hide();\r\n        if (this.disableScrolling) {\r\n            disableScroll(`.${this.className}`);\r\n        }\r\n        const portal = new TemplatePortal(this.template, this.viewContainer);\r\n        this.bodyPortalHost.attach(portal);\r\n        this.showing = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Check if help screen is visible.\r\n     * @returns boolean\r\n     */\r\n    visible(): boolean {\r\n        return this.bodyPortalHost.hasAttached();\r\n    }\r\n\r\n    /**\r\n     * Hide the help screen manually.\r\n     */\r\n    hide(): KeyboardShortcutsHelpComponent {\r\n        if (this.disableScrolling) {\r\n            enableScroll();\r\n        }\r\n        if (!this.bodyPortalHost.hasAttached()) {\r\n            return this;\r\n        }\r\n        this.bodyPortalHost.detach();\r\n        this.showing = false;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.hide();\r\n        if (this.clearIds) {\r\n            this.keyboard.remove(this.clearIds);\r\n        }\r\n        if (this.closeKeyIds) {\r\n            this.keyboard.remove(this.closeKeyIds);\r\n        }\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n        if (this.timeoutId) {\r\n            clearTimeout(this.timeoutId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Show/Hide the help screen manually.\r\n     */\r\n    toggle(): KeyboardShortcutsHelpComponent {\r\n        this.visible() ? this.hide() : this.reveal();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    private subscription: SubscriptionLike;\r\n    /**\r\n     * @ignore\r\n     */\r\n    private clearIds;\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    private closeKeyIds;\r\n    /**\r\n     * @ignore\r\n     */\r\n    private timeoutId;\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    ngOnInit() {\r\n        this.subscription = this.keyboardHelp.shortcuts$\r\n            .pipe(\r\n                distinctUntilChanged(),\r\n                map((shortcuts) => groupBy(shortcuts, \"label\"))\r\n            )\r\n            .subscribe((shortcuts) => {\r\n                this.shortcuts = shortcuts;\r\n                this.labels = Object.keys(shortcuts);\r\n            });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (!changes[\"closeKey\"].currentValue) {\r\n            return;\r\n        }\r\n        if (this.closeKeyIds) {\r\n            this.keyboard.remove(this.closeKeyIds);\r\n        }\r\n        this.closeKeyIds = this.addShortcut({\r\n            key: changes[\"closeKey\"].currentValue,\r\n            preventDefault: true,\r\n            command: () => this.hide(),\r\n            description: this.closeKeyDescription,\r\n            label: this.closeKeyDescription\r\n        });\r\n    }\r\n}\r\n","<ng-template>\r\n    <div class=\"help-modal__container\" [attr.aria-labelledby]=\"'modal-' + title\" role=\"dialog\">\r\n        <div class=\"{{className}}\" [@enterAnimation] *ngIf=\"showing\">\r\n            <div class=\"title\">\r\n                <h3 id=\"modal-{{title}}\" class=\"title__text\">{{title}}</h3>\r\n            </div>\r\n            <div class=\"help-modal__body\">\r\n                <span *ngIf=\"!labels.length\">\r\n                    {{emptyMessage}}\r\n                </span>\r\n                <div>\r\n                    <ul *ngFor=\"let label of labels\" class=\"help-modal__list\">\r\n                        <h4 class=\"item-group-label\">{{label}}</h4>\r\n                        <ng-keyboard-shortcuts-help-item\r\n                                *ngFor=\"let shortcut of shortcuts[label]; let i = index\"\r\n                                [shortcut]=\"shortcut\"\r\n                                [index]=\"i\"\r\n                        ></ng-keyboard-shortcuts-help-item>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"help-modal__backdrop\" [@overlayAnimation] (mousedown)=\"hide()\" *ngIf=\"showing\"></div>\r\n    </div>\r\n</ng-template>\r\n","import {Injectable, NgZone} from \"@angular/core\";\r\nimport {EVENT_MANAGER_PLUGINS, EventManager} from \"@angular/platform-browser\";\r\nimport {KeyboardShortcutsService} from './ng-keyboard-shortcuts.service';\r\nimport {ShortcutEventOutput} from './ng-keyboard-shortcuts.interfaces';\r\n\r\n\r\n@Injectable()\r\nexport class KeyboardShortcutsPlugin {\r\n    manager: EventManager;\r\n\r\n    constructor(private ngZone: NgZone, private keyboard: KeyboardShortcutsService) {\r\n    }\r\n\r\n    supports(eventName: string): boolean {\r\n        return eventName.split('.').includes('shortcut')\r\n    }\r\n\r\n    addEventListener(\r\n        element,\r\n        eventName,\r\n        originalHandler\r\n    ): Function {\r\n        const shortcut = eventName\r\n            .split('.')\r\n\r\n        const preventDefault = shortcut.includes(\"prevent\");\r\n        if (shortcut.length === 0)  {\r\n            throw new Error(\"please provide a shortcut\");\r\n        }\r\n        const [,key, description, label] = shortcut;\r\n        const id = this.keyboard.add({\r\n            key,\r\n            command(event: ShortcutEventOutput): any {\r\n                originalHandler(event)\r\n            },\r\n            description,\r\n            preventDefault,\r\n            label\r\n        })\r\n        return () => {\r\n            this.keyboard.remove(id);\r\n        };\r\n    }\r\n}\r\n\r\nexport const KeyboardShortcutsPluginProvider = {\r\n    multi: true,\r\n    provide: EVENT_MANAGER_PLUGINS,\r\n    useClass: KeyboardShortcutsPlugin\r\n};\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    ChangeDetectionStrategy,\r\n    Input,\r\n    OnDestroy,\r\n    OnChanges,\r\n    SimpleChanges,\r\n    AfterViewInit,\r\n    Output,\r\n    EventEmitter\r\n} from '@angular/core';\r\nimport {AllowIn, ShortcutEventOutput} from './ng-keyboard-shortcuts.interfaces';\r\nimport {KeyboardShortcutsService} from './ng-keyboard-shortcuts.service';\r\n\r\n@Component({\r\n    selector: \"ng-keyboard-shortcut\",\r\n    template: \"<ng-content ></ng-content>\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class KeyboardShortcutComponent implements AfterViewInit, OnDestroy, OnChanges {\r\n    constructor(private keyboard: KeyboardShortcutsService) {}\r\n    private clearId;\r\n\r\n    @Input() description: string;\r\n    // @Input() encapsulate = true;\r\n    @Input() label: string;\r\n    @Input() preventDefault: boolean;\r\n    @Input() allowIn: AllowIn[];\r\n    @Input() key: string | string[];\r\n    @Input() target: HTMLElement;\r\n    @Input() throttleTime: number;\r\n\r\n    @Output() fire = new EventEmitter();\r\n\r\n\r\n    ngOnDestroy(): void {\r\n        this.keyboard.remove(this.clearId);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.clearId = this.keyboard.add({\r\n            description: this.description,\r\n            label: this.label,\r\n            preventDefault: this.preventDefault,\r\n            allowIn: this.allowIn,\r\n            target: this.target,\r\n            key: this.key,\r\n            throttleTime: this.throttleTime,\r\n            command: (event: ShortcutEventOutput) => {\r\n                this.fire.emit(event);\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n","import { ModuleWithProviders, NgModule } from \"@angular/core\";\r\nimport { KeyboardShortcutsComponent } from \"./ng-keyboard-shortcuts.component\";\r\nimport { KeyboardShortcutsService } from \"./ng-keyboard-shortcuts.service\";\r\nimport { KeyboardShortcutsHelpService } from \"./ng-keyboard-shortcuts-help.service\";\r\nimport { KeyboardShortcutsSelectService } from \"./ng-keyboard-shortcuts-select.service\";\r\nimport { KeyboardShortcutsDirective } from \"./ng-keyboard-shortcuts.directive\";\r\nimport { KeyboardShortcutsHelpComponent } from \"./ng-keyboard-shortcuts-help.component\";\r\nimport { KeyboardShortcutsHelpItemComponent } from \"./ng-keyboard-shortcuts-help-item.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { KeyboardShortcutsPluginProvider } from \"./ng-keyboard-shortcuts.plugin\";\r\nimport { KeyboardShortcutComponent } from \"./keyboard-shortcut.component\";\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    entryComponents: [KeyboardShortcutsHelpComponent],\r\n    declarations: [\r\n        KeyboardShortcutsComponent,\r\n        KeyboardShortcutsDirective,\r\n        KeyboardShortcutsHelpComponent,\r\n        KeyboardShortcutsHelpItemComponent,\r\n        KeyboardShortcutComponent\r\n    ],\r\n    exports: [\r\n        KeyboardShortcutsComponent,\r\n        KeyboardShortcutsDirective,\r\n        KeyboardShortcutsHelpComponent,\r\n        KeyboardShortcutComponent\r\n    ]\r\n})\r\nexport class KeyboardShortcutsModule {\r\n    public static forRoot(): ModuleWithProviders<KeyboardShortcutsModule> {\r\n        return {\r\n            ngModule: KeyboardShortcutsModule,\r\n            providers: [\r\n                KeyboardShortcutsService,\r\n                KeyboardShortcutsHelpService,\r\n                KeyboardShortcutsSelectService,\r\n                KeyboardShortcutsPluginProvider\r\n            ]\r\n        };\r\n    }\r\n}\r\n","(function () {\r\n    if (typeof Element === 'undefined') {\r\n        return;\r\n    }\r\n    if (!Element.prototype.matches) {\r\n        Element.prototype.matches =\r\n            (Element.prototype as any).msMatchesSelector || Element.prototype.webkitMatchesSelector;\r\n    }\r\n\r\n    if (!Element.prototype.closest) {\r\n        Element.prototype.closest = function (s) {\r\n            let el = this;\r\n\r\n            do {\r\n                if (el.matches(s)) {\r\n                    return el;\r\n                }\r\n                el = el.parentElement || el.parentNode;\r\n            } while (el !== null && el.nodeType === 1);\r\n            return null;\r\n        };\r\n    }\r\n})();\r\n\r\nif (!(Array.prototype as any).flat) {\r\n    (Array.prototype as any).flat = function (depth) {\r\n        var flattend = [];\r\n        (function flat(array, depth) {\r\n            for (let el of array) {\r\n                if (Array.isArray(el) && depth > 0) {\r\n                    flat(el, depth - 1);\r\n                } else {\r\n                    flattend.push(el);\r\n                }\r\n            }\r\n        })(this, Math.floor(depth) || 1);\r\n        return flattend;\r\n    };\r\n}\r\n\r\nif (!(Array.prototype as any).flatMap) {\r\n    (Array.prototype as any).flatMap = function () {\r\n        return Array.prototype.map.apply(this, arguments).flat(1);\r\n    };\r\n}\r\n\r\n","/*\r\n * Public API Surface of ng-keyboard-shortcuts\r\n */\r\n\r\nexport { KeyboardShortcutsModule } from \"./lib/ng-keyboard-shortcuts.module\";\r\nimport \"./lib/polyfills\";\r\n\r\nexport {\r\n    ShortcutInput,\r\n    ShortcutEventOutput,\r\n    AllowIn,\r\n    Shortcut as ShortcutDirectiveInput\r\n} from \"./lib/ng-keyboard-shortcuts.interfaces\";\r\nexport { KeyboardShortcutsHelpService } from \"./lib/ng-keyboard-shortcuts-help.service\";\r\nexport { KeyboardShortcutsPluginProvider } from \"./lib/ng-keyboard-shortcuts.plugin\";\r\nexport { KeyboardShortcutsSelectService } from \"./lib/ng-keyboard-shortcuts-select.service\";\r\nexport { KeyboardShortcutsComponent } from \"./lib/ng-keyboard-shortcuts.component\";\r\nexport { KeyboardShortcutsDirective } from \"./lib/ng-keyboard-shortcuts.directive\";\r\nexport { KeyboardShortcutsHelpComponent } from \"./lib/ng-keyboard-shortcuts-help.component\";\r\nexport * from \"./lib/keyboard-shortcut.component\";\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["this","i1.KeyboardShortcutsService","i2.KeyboardShortcutsHelpService","i3.KeyboardShortcutsHelpItemComponent","i4"],"mappings":"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"}